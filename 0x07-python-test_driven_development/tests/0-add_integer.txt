>>> add_integer = __import__("0-add_integer").add_integer
>>> add_integer(5, 4)
9
>>> add_integer(-5, 4)
-1
>>> add_integer(-5.2, 4.3)
-1
>>> add_integer(5.2)
103
>>> add_integer("world",5.2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 6, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(5.2, "hello")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 8, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 6, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    a = int(a)
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    a = int(a)
ValueError: cannot convert float NaN to integer
